import java.util.Scanner;

public class Floyd {
  void flyd(int[][] w, int n){
    for (int k = 1; k <= n; k++) {
      for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= n; j++) {
          w[i][j] = Math.min(w[i][j] , w[i][k] + w[k][j]);
        }
      }
    }
  }

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    System.out.println("Enter no of vertices:-");
    int n = sc.nextInt();
    System.out.println("Enter the weighted Matrix");
    int a[][] = new int[n][n];
    for (int i = 1; i <= n; i++) {
      for (int j = 1; j <= n; j++) {
        a[i][j] = sc.nextInt();
      }
    }
    sc.close();
    Floyd f = new Floyd();
    f.flyd(a, n);
    System.out.println("The Shortest Path is:- ");
    for (int i = 1; i <= n; i++) {
      for (int j = 1; j <= n; j++) {
        System.out.print(a[i][j] + " ");
      }
      System.out.println();
    }
  }
}
